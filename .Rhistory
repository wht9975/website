ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6)+
scale_fill_manual(colors = met.brewer('Greek'))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6)+
scale_fill_manual(colors = met.brewer('Greek',10))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual('#3C0D03')
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual(rep('#3C0D03',10))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual(rep('#3C0D03',10))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual(c(rep('#3C0D03',10)))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual(colors = met.brewer('Greek',10))
top_10 %>%
ggplot()+
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x')+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = artist),
size=12, family = 'satisfy', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)+0.5,label = title),
size=9, family = 'mento', fontface = 'bold', vjust = 2.6) +
scale_fill_manual(values = met.brewer('Greek',10))
getwd()
library(blogdown)
serve_site()
stop_server()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
stop_server()
serve_site()
话不多说，直接进入正题
话不多说，直接进入正题
```{r}
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
```
library(ggbump)
### **一、导入数据**
```{r}
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
```
文章包括分析代码、可视化结果以及相关的分析结论。
话不多说，直接进入正题
#从GoogleFonts导入字体
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
font_add_google("Sacramento", "mento")
### **一、导入数据**
```{r}
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
#从GoogleFonts导入字体
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
```
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggthemes)
library(ggrepel)
library(ggforce)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
library(showtext); showtext_auto()
font_add_google("Satisfy", "satisfy")
library(showtext); showtext_auto()
font_add_google("Satisfy", "satisfy")
library(extrafont)
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggthemes)
library(ggrepel)
library(ggforce)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
### **一、导入数据**
```{r}
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
#从GoogleFonts导入字体
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
```
``` {加载包}
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
#从GoogleFonts导入字体
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
```
```{加载数据}
song = wiki_hot_100s
head(song)
```
``` {加载数据}
song = wiki_hot_100s
head(song)
```
``` {加载数据}
song = wiki_hot_100s
head(song)
```
#首先加载会使用到的包
library(tidyverse)
library(MetBrewer)
library(cowplot)
library(billboard)
library(extrafont)
library(cowplot)
library(showtext); showtext_auto()
library(ggcorrplot)
library(ggsci)
library(gghalves)
library(ggprism)
library(ggsignif)
library(car)
library(ggbump)
#从GoogleFonts导入字体
font_add_google("Satisfy", "satisfy")
font_add_google("Sacramento", "mento")
font_add_google("Lobster", "lobster")
font_add_google("Luckiest Guy", "luck")
font_add_google("Calligraffitti", "call")
font_add_google("Kalam", "kalam")
font_add_google("ZCOOL KuaiLe", "cool")
song = wiki_hot_100s
head(song)
library(blogdown)
serve_site()
#读入数据
song = wiki_hot_100s
head(song)
#读入数据
song = wiki_hot_100s
head(song)
stop_server()
serve_site()
stop_server()
stop_server()
serve_site()
#读入数据
head(spotify_track_data)
head(wiki_hot_100s)
#数据清洗
singer <- wiki_hot_100s %>%
mutate(year = as.numeric(year),
no = as.numeric(no)) %>%
filter(year %in% 2016 & no <= 100) %>% #选出目标数据并过滤缺失数据
group_by(artist) %>%
mutate(best = min(no),
num = n(),
no_all = sum(no)) %>% #找到每个歌手的最佳作品和上榜歌曲总数
ungroup %>%
mutate(mean_no = no_all/num) %>%
arrange(desc(num), mean_no) %>%
group_by(artist) %>%
mutate(rank = 1:num) %>%
filter(rank == 1) %>%
select(-c(year,rank,no)) %>%
ungroup() %>%
mutate(rank = row_number())
#选择前10歌手
top_10 <- singer[1:10,] %>%
mutate( angle = 360 - rank*(360 / (max(rank)+1)),
angle = ifelse(angle < -90, angle +180, angle),
mean_no = round(mean_no)) #计算平均歌曲排名
#数据清洗
singer <- wiki_hot_100s %>%
mutate(year = as.numeric(year),
no = as.numeric(no)) %>%
filter(year %in% 2016 & no <= 100) %>% #选出目标数据并过滤缺失数据
group_by(artist) %>%
mutate(best = min(no),
num = n(),
no_all = sum(no)) %>% #找到每个歌手的最佳作品和上榜歌曲总数
ungroup %>%
mutate(mean_no = no_all/num) %>%
arrange(desc(num), mean_no) %>%
group_by(artist) %>%
mutate(rank = 1:n()) %>%
filter(rank == 1) %>%
select(-c(year,rank,no)) %>%
ungroup() %>%
mutate(rank = row_number())
#选择前10歌手
top_10 <- singer[1:10,] %>%
mutate( angle = 360 - rank*(360 / (max(rank)+1)),
angle = ifelse(angle < -90, angle +180, angle),
mean_no = round(mean_no)) #计算平均歌曲排名
#结果可视化
image = "https://raw.githubusercontent.com/wht9975/website/master/images/loveuself.png"
#子图1
top_10 %>%
ggplot()+
ggimage::geom_image(aes(x = 0, y = -1.5, image = image),size=0.19) +
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x',direction = 1,start = -0.3)+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+1,label = artist),
size=18, family = 'satisfy', fontface = 'bold', vjust = -0.1) +
geom_text(aes(x = rank, y=as.numeric(num)+1,label = paste(title,'-',best)),
size=11, family = 'call', fontface = 'bold', vjust = 1.7, color = '#716e77', hjust = 0.55) +
geom_text(aes(x = 0.25, y=2.8),label = 'The year of',
size=28, family = 'lobster', fontface = 'bold', hjust = 1)+
geom_text(data = data.frame(label=factor(c('2','0','1','6')),
y = c(12/4, 9/4, 6/4, 3/4)),
aes(x = c(0.5,0.5,0.45,0.5) , y = y , label = label),vjust = 1,hjust = 1,
size = 25,  family = 'kalam', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)/2, label = rank, size =rank),
color = 'white',family = 'kalam',show.legend = F) +
scale_size_continuous(range = c(32,16)) +
scale_fill_manual(values = met.brewer('Hokusai1',n=10)) ->song_2016
#子图2
top_10 %>%
ggplot(aes(x = rank, y = 100 - mean_no, fill = artist))+
geom_col(aes(y=100),color = 'lightgrey',fill = 'white', lty = 'dashed', size = 0.8)+
geom_col(aes(color = artist),show.legend = F,size = 0.8)+
scale_fill_manual(values = met.brewer('Hokusai1',n=10))+
scale_color_manual(values = met.brewer('Hokusai1',n=10))+
geom_hline(yintercept = c(50,75),color = '#716e77',lty = 'dashed',size = 0.8)+
geom_text(aes(y = -4, label = artist),
size=14, family = 'satisfy', fontface = 'bold')+
theme_minimal()+
theme(panel.grid = element_blank(),
# axis.line.x = element_line(size = 2),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(family = 'kalam',size = 64, hjust = 0.5),
plot.margin = margin(8,2,1,2,unit = 'mm')) +
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(breaks=c(0,50,75,100, 120), labels = c('',50,25,1, '')) -> song_col
#图片合并
ggdraw()+
draw_plot(song_2016, x = 0.025,y = 0.175,width = 0.95,height = 0.95)+
draw_plot(song_col, x = 0.125, y = 0.025,width = 0.75,height = 0.35)+
draw_plot_label(c("M","e","a","n"), x = rep((0.07),4), y = seq(0.35,0.15,length.out=4),
size = 96, family = 'kalam',hjust = 0.5)+
draw_plot_label(c("R","a","n","k"), x = rep((0.095),4), y = seq(0.32,0.15,length.out=4),
size = 84, family = 'kalam',hjust = 0.5) -> song_all
ggsave("2016.png", song_all, width = 16, height = 9, units = 'in',bg = 'white')
#结果可视化
image = "https://raw.githubusercontent.com/wht9975/website/master/images/loveuself.png"
#子图1
top_10 %>%
ggplot()+
ggimage::geom_image(aes(x = 0, y = -1.5, image = image),size=0.19) +
geom_col(aes(x=rank, y=num, fill = artist),show.legend = F, width = 0.95)+
coord_polar(theta = 'x',direction = 1,start = -0.3)+
ylim(c(-1.5,5))+
xlim(c(0,11))+
theme_void()+
geom_text(aes(x = rank, y=as.numeric(num)+1,label = artist),
size=18, family = 'satisfy', fontface = 'bold', vjust = -0.1) +
geom_text(aes(x = rank, y=as.numeric(num)+1,label = paste(title,'-',best)),
size=11, family = 'call', fontface = 'bold', vjust = 1.7, color = '#716e77', hjust = 0.55) +
geom_text(aes(x = 0.25, y=2.8),label = 'The year of',
size=28, family = 'lobster', fontface = 'bold', hjust = 1)+
geom_text(data = data.frame(label=factor(c('2','0','1','6')),
y = c(12/4, 9/4, 6/4, 3/4)),
aes(x = c(0.5,0.5,0.45,0.5) , y = y , label = label),vjust = 1,hjust = 1,
size = 25,  family = 'kalam', fontface = 'bold') +
geom_text(aes(x = rank, y=as.numeric(num)/2, label = rank, size =rank),
color = 'white',family = 'kalam',show.legend = F) +
scale_size_continuous(range = c(32,16)) +
scale_fill_manual(values = met.brewer('Hokusai1',n=10)) ->song_2016
#子图2
top_10 %>%
ggplot(aes(x = rank, y = 100 - mean_no, fill = artist))+
geom_col(aes(y=100),color = 'lightgrey',fill = 'white', lty = 'dashed', size = 0.8)+
geom_col(aes(color = artist),show.legend = F,size = 0.8)+
scale_fill_manual(values = met.brewer('Hokusai1',n=10))+
scale_color_manual(values = met.brewer('Hokusai1',n=10))+
geom_hline(yintercept = c(50,75),color = '#716e77',lty = 'dashed',size = 0.8)+
geom_text(aes(y = -4, label = artist),
size=14, family = 'satisfy', fontface = 'bold')+
theme_minimal()+
theme(panel.grid = element_blank(),
# axis.line.x = element_line(size = 2),
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(family = 'kalam',size = 64, hjust = 0.5),
plot.margin = margin(8,2,1,2,unit = 'mm')) +
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(breaks=c(0,50,75,100, 120), labels = c('',50,25,1, '')) -> song_col
#图片合并
ggdraw()+
draw_plot(song_2016, x = 0.025,y = 0.175,width = 0.95,height = 0.95)+
draw_plot(song_col, x = 0.125, y = 0.025,width = 0.75,height = 0.35)+
draw_plot_label(c("M","e","a","n"), x = rep((0.07),4), y = seq(0.35,0.15,length.out=4),
size = 96, family = 'kalam',hjust = 0.5)+
draw_plot_label(c("R","a","n","k"), x = rep((0.095),4), y = seq(0.32,0.15,length.out=4),
size = 84, family = 'kalam',hjust = 0.5) -> song_all
ggsave("2016.png", song_all, width = 16, height = 9, units = 'in',bg = 'white')
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
stop_server()
stop_server()
serve_site()
serve_site()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
